import disnake
from disnake.ext import commands
from random import randint
import json


class CMDUsers(commands.Cog):

    def __init__(self, bot):
        self.bot = bot
        self.help_embed = disnake.Embed(
            title="–õ–∏—Å—Ç –∫–æ–º–∞–Ω–¥:",
            color=229281
        )
        self.help_rating_embed = disnake.Embed(
            title="–ö–∞–∫ —É—Å—Ç—Ä–æ–µ–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞:",
            description=f"–ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç <@1217538387007901857>, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–≥—É–ª–∏—Ä—É–µ—Ç —Ç–≤–æ–π —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥. –≠—Ç–æ, –º–æ–∂–Ω–æ —Å–∫–∞–∑–∞—Ç—å, –≤–∞–ª—é—Ç–∞-–ø–æ–∫–∞–∑–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–≤–æ–π —Å—Ç–∞—Ç—É—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. "
                        f"–†–µ–π—Ç–∏–Ω–≥ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å —Ä–∞–∑–Ω—ã–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏:–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, —Å—Ç–∞–≤–∫–∏, –∫–æ–¥—ã, –ø–æ–º–æ—â—å —Å–µ—Ä–≤–µ—Ä—É."
                        f"```ansi\n[2;31m[0m[2;31m–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —á—É–∂–∏–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º –∏ –∏–º–µ—é—Ç –ø–æ–ª–Ω–æ–µ –ø—Ä–∞–≤–æ –ø–æ–Ω–∏–∑–∏—Ç—å –µ–≥–æ –µ—Å–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–æ–≤–∏–Ω–∏–ª—Å—è.[0m\n"
                        f"```\n**–ó–∞ —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ–ª–∞–≥–∞—é—Ç—Å—è —Ä–æ–ª–∏:**"
        )
        with open("data/data.json", "r") as f:
            self.rating = json.load(f)
        with open("data/data_messages.json", "r") as k:
            self.data_messages = json.load(k)
        with open('data/time_data.json', 'r') as f:
            self.data_time = json.load(f)

    @commands.Cog.listener()
    async def on_ready(self):
        print(f"Bot {self.bot.user} is ready to work!")
        await self.bot.change_presence(activity=disnake.Game("Nothing"))

    @commands.Cog.listener()
    async def on_button_click(self,inter: disnake.MessageInteraction):
        if inter.component.custom_id == 'button1':
            await inter.send(embed=self.help_embed)
        elif inter.component.custom_id == "button":
            await inter.response.edit_message(embed=self.help_rating_embed, view=None)

    @commands.Cog.listener()
    async def on_member_join(self,member):
        normis = member.guild.get_role(1253372831094407269)
        await member.add_roles(normis)
        boba = await self.bot.fetch_user(member.id)
        button1 = disnake.ui.Button(label="–û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è", style=disnake.ButtonStyle.success, custom_id="button1")
        action_row = disnake.ui.ActionRow(button1)
        embed = disnake.Embed(
            title="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä!",
            description=f"–ï—Å–ª–∏ —Ç—ã –∏–≥—Ä–∞–µ—à—å –≤ –¥–æ—Ç—É, —Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—Å—è —Å –∫–æ–º–∞–Ω–¥–æ–π `/buff` –Ω–∞ –Ω–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ.\n–°–æ–≤–µ—Ç—É—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `/commands`."
        )
        embed.set_author(
            name="–î–µ–≥—Ä–∞–¥-–æ—Ç—Ä—è–¥",
            icon_url="https://cdn.discordapp.com/icons/898250287221997598/ee7b2bbb5f9418c11cc1ecd25ae0b596.webp?size=128"
        )
        await boba.send(embed=embed, components=action_row)
        if member.bot:
            return
        self.rating[f"<@{member.id}>"] = 0
        self.data_time[f"<@{member.id}>"] = 0
        self.data_messages[f"<@{member.id}>"] = 0
        with open('data/time_data.json', 'w') as f:
            json.dump(self.data_time, f, indent=4)
        with open('data/data.json', 'w') as f:
            json.dump(self.rating, f, indent=4)
        with open('data/data_messages.json', 'w') as f:
            json.dump(self.data_messages, f, indent=4)

    @commands.Cog.listener()
    async def on_member_remove(self,member):
        if member.bot:
            return
        try:
            self.rating.pop(f"<@{member.id}>")
            self.data_time.pop(f"<@{member.id}>")
            self.data_messages.pop(f"<@{member.id}>")
        except:
            print("–ù–µ—Ç —Ç–∞–∫–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
        with open('data/time_data.json', 'w') as f:
            json.dump(self.data_time, f, indent=4)
        with open('data/data.json', 'w') as f:
            json.dump(self.rating, f, indent=4)
        with open('data/data_messages.json', 'w') as f:
            json.dump(self.data_messages, f, indent=4)

    @commands.command()
    async def profile(self, ctx):
        bb = randint(0, 2)
        if bb == 1:
            await ctx.reply("Hiii:3")
        else:
            await ctx.reply("–ò–¥–∏ –Ω–∞—Ö—É–π, —Å—É–∫–∞")

    @commands.slash_command(description="–û—á–∏—Å—Ç–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ n —Å–æ–æ–±—â–µ–Ω–∏–π")
    @commands.has_any_role(1089868546286289006,910982734074249237)
    async def clear(self, inter, n: int, bot_only: bool = False):
        await inter.response.defer(ephemeral=True)

        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ n —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–∞–Ω–∞–ª–µ
        messages = await inter.channel.history(limit=n).flatten()

        if bot_only:
            # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞
            messages = [msg for msg in messages if msg.author == self.bot.user]

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
        if messages:
            await inter.channel.delete_messages(messages)
            await inter.send(f"–£–¥–∞–ª–µ–Ω–æ {len(messages)} —Å–æ–æ–±—â–µ–Ω–∏–π.")
        else:
            await inter.send("–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")

    @commands.slash_command(description="–õ–∏—Å—Ç –∫–æ–º–∞–Ω–¥")
    async def commands(self,inter):
        self.help_embed.add_field("`/rate`", "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–∑–Ω–∞—Ç—å –Ω—ã–Ω–µ—à–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–µ—Ä–≤–µ—Ä–∞")
        self.help_embed.add_field("`/mymessages`", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö —Ç–æ–±–æ–π —Å–æ–æ–±—â–µ–Ω–∏–π")
        self.help_embed.add_field("`/myid`", "–ó–∞–Ω–æ—Å–∏—Ç —Ç–≤–æ–π id —Å—Ç–∏–º–∞ –∏–ª–∏ –¥–æ—Ç—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, —á—Ç–æ–±—ã —Ç—ã –º–æ–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–æ–π `/buff`")
        self.help_embed.add_field("`/buff`", "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –±–µ—Ä—ë—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ –¥–æ—Ç–µ —Å —Å–∞–π—Ç–∞ DOTABUFF")
        self.help_embed.add_field("`!profile`", "–ú–µ—Å—Ç–Ω—ã–π –∞–Ω–∞–ª–æ–≥ –º–æ–Ω–µ—Ç–æ—á–∫–∏")
        self.help_embed.add_field("`/itembuild`", f"```ansi\n[2;31m–≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç[0m\n```")
        self.help_embed.add_field("`/bet`", "–ü–æ–∑–≤–æ–ª—è–µ—Ç —Å—Ç–∞–≤–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥ –Ω–∞ –∫–∞–∫–∏–µ-–Ω–∏–±—É–¥—å —Å–∏—Ç—É–∞—Ü–∏–∏. –í —ç—Ç–∏—Ö —Å–ø–æ—Ä–∞—Ö —Ç–∞–∫–∂–µ –º–æ–≥—É—Ç –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –∏ –¥—Ä—É–≥–∏–µ –ª—é–¥–∏. **–ß—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–ø–æ—Ä, –≤–∞–º –Ω—É–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ <@495953464128569366>.**")
        self.help_rating_embed.add_field("`–ù–æ—Ä–º–∏—Å`", "–≠—Ç–∞ —Ä–æ–ª—å –µ—Å—Ç—å —É –∫–∞–∂–¥–æ–≥–æ,–∫—Ç–æ –∏–º–µ–µ—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥.\n```ansi\n[2;34m[0;34m[0;45m–ü–æ –ø—Ä–∞–≤–∞–º - –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–∏—Å–∫–æ—Ä–¥–∞, –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º —Ç–æ–≥–æ, —á—Ç–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é –º—É—Ç–∏—Ç—Å—è –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Å 35 —Ä–µ–π—Ç–∏–Ω–≥–∞.[0m[0;34m[0m[2;34m[0m[2;40m[0m[2;41m[0m\n```")
        self.help_rating_embed.add_field("`–û–ø—É—â–µ–Ω–Ω–µ—Ü`", "–≠—Ç—É —Ä–æ–ª—å –∏–º–µ—é—Ç –ª—é–¥–∏ —Å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º.\n```ansi\n[2;40m–ü–æ –ø—Ä–∞–≤–∞–º - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –Ω–µ–º–Ω–æ–≥–æ —É—Ä–µ–∑–∞–Ω–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏.–ï—Å–ª–∏ —Ä–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ–ø—É—Å—Ç–∏—Ç—Å—è –Ω–∏–∂–µ -100, —Ç–æ –æ–Ω –æ—Ç–ø—Ä–∞–≤–∏—Ç—Å—è –≤ —Ç–∞–π–º-–∞—É—Ç[0m[2;40m[0m[2;41m[0m\n```")
        self.help_rating_embed.add_field("`–ü–æ—á—ë—Ç–Ω—ã–π`", f"–≠—Ç—É —Ä–æ–ª—å –∏–º–µ—é—Ç —Ç–æ–ª—å–∫–æ —Å–∞–º—ã–µ –ø–æ—á—ë—Ç–Ω—ã–µ –¥–µ–≥–µ–Ω–µ—Ä–∞—Ç—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.\n```ansi\n[2;41m–õ—é–¥–∏ —Å —ç—Ç–æ–π —Ä–æ–ª—å—é –æ–±–ª–∞–¥–∞—é—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏.–†–æ–ª—å –¥–æ—Å—Ç–∏–≥–∞–µ—Ç—Å—è —Å–æ 100 —Ä–µ–π—Ç–∏–Ω–≥–∞.[0m[2;40m[0m[2;41m[0m\n```")

        button = disnake.ui.Button(label="–°–∏—Å—Ç–µ–º–∞ —Ä–µ–π—Ç–∏–Ω–≥–∞ ‚û°Ô∏è", style=disnake.ButtonStyle.blurple, custom_id="button")
        action_row = disnake.ui.ActionRow(button)
        await inter.send(embed=self.help_embed,components=action_row,ephemeral=True)


def setup(bot):
    bot.add_cog(CMDUsers(bot))
